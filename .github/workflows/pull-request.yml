name: Pull Request

on:
  pull_request:
    branches:
      - main

  workflow_dispatch:
    inputs:
      monitor_permissions:
        type: boolean
        description: Monitor Permissions
        required: false
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      id-token: write

    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        if: ${{ github.event.inputs.monitor_permissions == 'true' }}

      - uses: actions/checkout@v5
        with:
          lfs: 'true'

      - uses: ./.github/actions/setup-cloud
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_ID }}
          setup_gcloud: false

      - uses: gradle/actions/setup-gradle@v4

      - run: echo ${{ secrets.FIREBASE_GOOGLE_SERVICES }} | base64 --decode > tally-app/google-services.json

      - id: gradle-build
        run: ./gradlew build -Pgcp.buildcache=true --console=plain

      - run: ./gradlew detektAll --continue --console=plain

      # run ./gradlew recordPaparazziDebug
      - id: screenshot-validation
        run: ./gradlew verifyPaparazziDebug --console=plain

      - uses: actions/upload-artifact@v4
        if: ${{ failure() && steps.screenshot-validation.outcome == 'failure' }}
        with:
          if-no-files-found: error
          name: screenshot-test-report
          path: "**/build/paparazzi/failures"

      - uses: thollander/actions-comment-pull-request@v3
        if: ${{ steps.gradle-build.outputs.build-scan-url }}
        with:
          message: "Build scan published to ${{ steps.gradle-build.outputs.build-scan-url }}"
          comment-tag: build-scan-url
          mode: recreate

      - uses: test-summary/action@v2
        if: always()
        with:
          paths: "**/build/test-results/*Test/TEST-*.xml"

      - uses: actions/upload-artifact@v4
        if: ${{ failure() && steps.gradle-build.outcome == 'failure' }}
        with:
          name: test-results
          path: "**/build/reports/tests/allTests"
