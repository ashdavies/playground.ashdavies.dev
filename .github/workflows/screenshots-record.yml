name: Record Screenshots

on:
  pull_request:
    branches:
      - main

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  recordScreenshots:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v5
        with:
          lfs: 'true'

      - uses: gradle/actions/setup-gradle@v5

      - run: echo ${{ secrets.FIREBASE_GOOGLE_SERVICES }} | base64 --decode > conference-app/google-services.json

      - run: ./gradlew recordPaparazziDebug --console=plain

      - env:
          GITHUB_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
        run: |
          # --- Configuration ---
          BRANCH_NAME="auto-commit-$(date +%Y%m%d-%H%M%S)"
          COMMIT_MESSAGE="Auto commit via GitHub API"
          BASE_BRANCH="main"
          
          # --- Check for changes ---
          if git diff --quiet && git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          
          # --- Prepare ---
          git add --all
          COMMIT_CONTENT=$(git diff --cached --name-only)
          echo "Files to commit:"
          echo "$COMMIT_CONTENT"
        
          # --- Get latest commit SHA from base branch ---
          BASE_SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO/git/ref/heads/$BASE_BRANCH" | jq -r .object.sha)
          
          # --- Create new branch reference ---
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"ref\": \"refs/heads/$BRANCH_NAME\", \"sha\": \"$BASE_SHA\"}" \
            "https://api.github.com/repos/$REPO/git/refs" > /dev/null
          echo "Created new branch: $BRANCH_NAME"
          
          # --- Create blobs for each changed file ---
          declare -A BLOBS
          for FILE in $COMMIT_CONTENT; do
            CONTENT=$(base64 -w0 "$FILE")
            BLOB_SHA=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
              -d "{\"content\":\"$CONTENT\", \"encoding\":\"base64\"}" \
              "https://api.github.com/repos/$REPO/git/blobs" | jq -r .sha)
            BLOBS["$FILE"]=$BLOB_SHA
          done
          
          # --- Get base tree ---
          BASE_TREE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO/git/commits/$BASE_SHA" | jq -r .tree.sha)
          
          # --- Create new tree with updated files ---
          TREE_ENTRIES=$(printf '%s\n' "${!BLOBS[@]}" | jq -R -s -c \
            --argjson blobs "$(printf '%s\n' "${!BLOBS[@]}" | jq -R -s -c 'split("\n")[:-1]')" \
            'split("\n")[:-1] | map({path: ., mode: "100644", type: "blob", sha: env.BLOBS[.]} )')
          
          NEW_TREE_SHA=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"base_tree\": \"$BASE_TREE\", \"tree\": $TREE_ENTRIES}" \
            "https://api.github.com/repos/$REPO/git/trees" | jq -r .sha)
          
          # --- Create commit ---
          NEW_COMMIT_SHA=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"message\": \"$COMMIT_MESSAGE\", \"tree\": \"$NEW_TREE_SHA\", \"parents\": [\"$BASE_SHA\"]}" \
            "https://api.github.com/repos/$REPO/git/commits" | jq -r .sha)
          
          # --- Update branch reference ---
          curl -s -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"sha\": \"$NEW_COMMIT_SHA\"}" \
            "https://api.github.com/repos/$REPO/git/refs/heads/$BRANCH_NAME" > /dev/null
          
          echo "âœ… Commit pushed to new branch: $BRANCH_NAME"  
    
          # Create Pull Request
          gh pr create --fill --label "Automated"
