name: Android Release

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      monitor_permissions:
        type: boolean
        description: Monitor Permissions
        required: false
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build_release:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: 'write'
      id-token: 'write'

    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        if: ${{ github.event.inputs.monitor_permissions == 'true' }}

      - uses: actions/checkout@v4
        with:
          lfs: 'true'

      - uses: ./.github/actions/setup-gradle

      - id: op-secrets
        uses: 1password/load-secrets-action@v2
        with:
          export-env: false
        env:
          KEYSTORE_BASE64: op://Development/playground keystore/keystore base64
          KEYSTORE_PASSWORD: op://Development/playground keystore/keystore password
          KEY_ALIAS: op://Development/playground keystore/key alias
          KEY_PASSWORD: op://Development/playground keystore/key password
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - env:
          KEYSTORE_BASE64: ${{ steps.op-secrets.outputs.KEYSTORE_BASE64 }}
        run: |
          echo ${{ secrest.firebase_google_services }} | base64 --decode > tally-app/google-services.json
          echo $KEYSTORE_BASE64 | base64 --decode > keystore.jks

      - uses: ./.github/actions/setup-cloud
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_ID }}
          setup_gcloud: false

      - id: version-code
        run: echo "VERSION_CODE=$(( (GITHUB_RUN_NUMBER * 2) + 1000 ))" >> $GITHUB_OUTPUT

      - run: |
          ./gradlew \
            :tally-app:assemble \
            :tally-app:bundle \
            --console=plain
        env:
          ANDROID_API_KEY: ${{ secrets.ANDROID_API_KEY }}
          BROWSER_API_KEY: ${{ secrets.BROWSER_API_KEY }}
          KEY_STORE_FILE: keystore.jks
          KEY_STORE_PASSWORD: ${{ steps.op-secrets.outputs.KEYSTORE_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ steps.op-secrets.outputs.KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ steps.op-secrets.outputs.KEY_PASSWORD }}
          VERSION_CODE: ${{ steps.version-code.outputs.VERSION_CODE }}

      - run: ./gradlew verifyPaparazziDebug --console=plain

      - uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: android-build-outputs
          path: tally-app/build/outputs

  publish_play_store:
    needs: [ build_release ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: android-build-outputs
          path: tally-app/build/outputs

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - run: |
          play_store_key=${{ secrets.FASTLANE_SERVICE_ACCOUNT_KEY }}
          path=tally-app/src/androidMain/play-store-key.json
          echo $play_store_key | base64 --decode > $path

#      - run: bundle install && bundle exec fastlane android publish_to_play_store
